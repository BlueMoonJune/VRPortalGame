[gd_resource type="Shader" format=2]

[resource]
code = "// NOTE: Shader automatically converted from Godot Engine 3.4.2.stable's SpatialMaterial.

shader_type spatial;
render_mode blend_mix,depth_draw_always,cull_back,diffuse_burley,specular_schlick_ggx;

uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_normal : hint_normal;
uniform float normal_scale : hint_range(-16,16);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform vec3 Plane_Norm;
uniform vec3 Plane_Pos;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	NORMALMAP = texture(texture_normal,base_uv).rgb;
	NORMALMAP_DEPTH = normal_scale;
	// VectorUniform:8
	vec3 n_out8p0 = Plane_Norm;

// VectorFunc:13
	vec3 n_out13p0 = normalize(n_out8p0);

// Input:12
	mat4 n_out12p0 = CAMERA_MATRIX;

// Input:10
	vec3 n_out10p0 = VERTEX;

// TransformVectorMult:11
	vec3 n_out11p0 = (n_out12p0 * vec4(n_out10p0, 1.0)).xyz;

// VectorUniform:7
	vec3 n_out7p0 = Plane_Pos;

// VectorOp:15
	vec3 n_out15p0 = n_out11p0 - n_out7p0;

// DotProduct:9
	float n_out9p0 = dot(n_out13p0, n_out15p0);

// Compare:14
	float n_in14p1 = -0.00001;
	bool n_out14p0 = n_out9p0>=n_in14p1;

// Output:0
	ALPHA = (n_out14p0 ? 1.0 : 0.0);
}"
