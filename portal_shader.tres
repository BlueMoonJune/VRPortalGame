[gd_resource type="VisualShader" load_steps=24 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=9]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 100.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=10]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=14]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=15]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 1

[sub_resource type="VisualShaderNodeVectorScalarMix" id=16]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0.6, 0 ), 2, 0.5 ]

[sub_resource type="VisualShaderNodeScalarClamp" id=17]

[sub_resource type="VisualShaderNodeVec3Uniform" id=19]
uniform_name = "Border_Color"

[sub_resource type="VisualShaderNodeScalarOp" id=24]

[sub_resource type="VisualShaderNodeTextureUniform" id=25]
uniform_name = "Noise_Texture"
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id=26]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=27]

[sub_resource type="VisualShaderNodeVec3Uniform" id=28]
uniform_name = "Noise_Speed"

[sub_resource type="VisualShaderNodeVectorOp" id=29]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2]
output_port_for_preview = 1
uniform_name = "TextureUniform"
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id=30]
input_name = "time"

[sub_resource type="VisualShaderNodeVec3Uniform" id=31]
uniform_name = "Border_Color2"

[sub_resource type="VisualShaderNodeVectorInterp" id=32]

[sub_resource type="VisualShaderNodeVectorDecompose" id=33]

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeInput" id=20]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorLen" id=21]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=22]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=23]
output_port_for_preview = 0
default_input_values = [ 0, 0.5, 1, 0.5 ]
operator = 1

[resource]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode specular_schlick_ggx, unshaded;

uniform sampler2D TextureUniform : hint_albedo;
uniform vec3 Border_Color;
uniform vec3 Border_Color2;
uniform vec3 Noise_Speed;
uniform sampler2D Noise_Texture : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Input:4
	vec3 n_out4p0 = vec3(SCREEN_UV, 0.0);

// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture(TextureUniform, n_out4p0.xy);
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// VectorUniform:22
	vec3 n_out22p0 = Border_Color;

// VectorUniform:31
	vec3 n_out31p0 = Border_Color2;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorDecompose:33
	float n_out33p0 = n_out25p0.x;
	float n_out33p1 = n_out25p0.y;
	float n_out33p2 = n_out25p0.z;

// VectorMix:32
	vec3 n_out32p0 = mix(n_out22p0, n_out31p0, vec3(n_out33p1));

// Input:6
	vec3 n_out6p0 = vec3(UV, 0.0);

// VectorOp:8
	vec3 n_in8p1 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out8p0 = n_out6p0 - n_in8p1;

// VectorLen:7
	float n_out7p0 = length(n_out8p0);

// ScalarOp:15
	float n_in15p1 = 10.00000;
	float n_out15p0 = n_out7p0 * n_in15p1;

// ScalarOp:16
	float n_in16p1 = 4.00000;
	float n_out16p0 = n_out15p0 - n_in16p1;

// VectorUniform:27
	vec3 n_out27p0 = Noise_Speed;

// Input:30
	float n_out30p0 = TIME;

// VectorOp:29
	vec3 n_out29p0 = n_out27p0 * vec3(n_out30p0);

// VectorOp:26
	vec3 n_out26p0 = n_out25p0 + n_out29p0;

// TextureUniform:24
	vec3 n_out24p0;
	float n_out24p1;
	{
		vec4 n_tex_read = texture(Noise_Texture, n_out26p0.xy);
		n_out24p0 = n_tex_read.rgb;
		n_out24p1 = n_tex_read.a;
	}

// ScalarOp:23
	float n_out23p0 = n_out16p0 + dot(n_out24p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarClamp:20
	float n_in20p1 = 0.00000;
	float n_in20p2 = 1.00000;
	float n_out20p0 = clamp(n_out23p0, n_in20p1, n_in20p2);

// VectorScalarMix:19
	vec3 n_out19p0 = mix(n_out3p0, n_out32p0, n_out20p0);

// ScalarOp:9
	float n_in9p0 = 0.50000;
	float n_out9p0 = n_in9p0 - n_out7p0;

// ScalarOp:10
	float n_in10p1 = 100.00000;
	float n_out10p0 = n_out9p0 * n_in10p1;

// ScalarClamp:11
	float n_in11p1 = 0.00000;
	float n_in11p2 = 1.00000;
	float n_out11p0 = clamp(n_out10p0, n_in11p1, n_in11p2);

// Output:0
	ALBEDO = n_out19p0;
	ALPHA = n_out11p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1529.88, -457.24 )
flags/unshaded = true
nodes/fragment/0/position = Vector2( 920, -140 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 0, 0 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -220, 120 )
nodes/fragment/6/node = SubResource( 20 )
nodes/fragment/6/position = Vector2( -820, -400 )
nodes/fragment/7/node = SubResource( 21 )
nodes/fragment/7/position = Vector2( -400, -400 )
nodes/fragment/8/node = SubResource( 22 )
nodes/fragment/8/position = Vector2( -600, -400 )
nodes/fragment/9/node = SubResource( 23 )
nodes/fragment/9/position = Vector2( -200, -400 )
nodes/fragment/10/node = SubResource( 9 )
nodes/fragment/10/position = Vector2( 0, -400 )
nodes/fragment/11/node = SubResource( 10 )
nodes/fragment/11/position = Vector2( 200, -400 )
nodes/fragment/15/node = SubResource( 14 )
nodes/fragment/15/position = Vector2( -200, -640 )
nodes/fragment/16/node = SubResource( 15 )
nodes/fragment/16/position = Vector2( 0, -640 )
nodes/fragment/19/node = SubResource( 16 )
nodes/fragment/19/position = Vector2( 600, 0 )
nodes/fragment/20/node = SubResource( 17 )
nodes/fragment/20/position = Vector2( 760, -200 )
nodes/fragment/22/node = SubResource( 19 )
nodes/fragment/22/position = Vector2( 200, 140 )
nodes/fragment/23/node = SubResource( 24 )
nodes/fragment/23/position = Vector2( 400, -200 )
nodes/fragment/24/node = SubResource( 25 )
nodes/fragment/24/position = Vector2( 0, -200 )
nodes/fragment/25/node = SubResource( 26 )
nodes/fragment/25/position = Vector2( -400, -160 )
nodes/fragment/26/node = SubResource( 27 )
nodes/fragment/26/position = Vector2( -200, -160 )
nodes/fragment/27/node = SubResource( 28 )
nodes/fragment/27/position = Vector2( -600, -80 )
nodes/fragment/29/node = SubResource( 29 )
nodes/fragment/29/position = Vector2( -400, -80 )
nodes/fragment/30/node = SubResource( 30 )
nodes/fragment/30/position = Vector2( -600, 0 )
nodes/fragment/31/node = SubResource( 31 )
nodes/fragment/31/position = Vector2( 200, 200 )
nodes/fragment/32/node = SubResource( 32 )
nodes/fragment/32/position = Vector2( 400, 140 )
nodes/fragment/33/node = SubResource( 33 )
nodes/fragment/33/position = Vector2( 0, 300 )
nodes/fragment/connections = PoolIntArray( 4, 0, 3, 0, 8, 0, 7, 0, 7, 0, 9, 1, 9, 0, 10, 0, 10, 0, 11, 0, 7, 0, 15, 0, 15, 0, 16, 0, 19, 0, 0, 0, 3, 0, 19, 0, 11, 0, 0, 1, 24, 0, 23, 1, 16, 0, 23, 0, 20, 0, 19, 2, 25, 0, 26, 0, 26, 0, 24, 0, 27, 0, 29, 0, 29, 0, 26, 1, 30, 0, 29, 1, 23, 0, 20, 0, 22, 0, 32, 0, 31, 0, 32, 1, 25, 0, 33, 0, 33, 1, 32, 2, 32, 0, 19, 1, 6, 0, 8, 0 )
